SELECT*
FROM `coviddeaths (4)`;

RENAME TABLE `coviddeaths (4)` TO covid_deaths;

DROP TABLE COVID_VACCINATIONS;


SELECT*
FROM Covid_deaths;

SELECT*
FROM Covidvaccinations;



-- datasets needed the most 
SELECT location,date,total_cases,new_cases,total_deaths,population
FROM Covid_deaths;


-- The datasets shall be using the most
SELECT location,date,total_cases,new_cases,total_deaths,population
FROM Covid_deaths;


-- Getting the total cases vs total deaths (shows the likelihood of dying if you contract covvid in your country)

SELECT location,date,total_cases,total_deaths,(total_deaths / total_cases)*100 AS Death_percentage
FROM Covid_deaths
WHERE location like '%nig%'
ORDER BY 1,2
;


-- total cases vs population (Shows what percentage of population has gotten covid)

SELECT location, total_cases,total_deaths,population,(total_cases/population)*100 AS PercentPopulationInfected
FROM Covid_deaths
-- WHERE location like '%nig%'
ORDER BY 1,2
;

SELECT location,population, MAX(total_cases)AS HIghestInfectionCount , MAX((total_cases/population))*100 AS PercentPopulationInfected
FROM Covid_deaths
-- WHERE location like '%nig%'
GROUP BY 1,2
ORDER BY PercentPopulationInfected DESC
;
 
-- countries with the highest death count per population
SELECT location,population, CAST(MAX(total_deaths) AS SIGNED) AS TotalDeathCount 
FROM Covid_deaths
-- WHERE location like '%nig%'
GROUP BY 1,2
ORDER BY TotalDeathCount DESC
;



-- BREAKING IT DOWN BY CONTINENT

SELECT  Location, CAST(MAX(total_deaths) AS SIGNED) AS TotalDeathCount 
FROM Covid_deaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC
;




Select *
From Covid_Deaths
Where continentIS IS NOT NULL
order by 3,4;


-- Select Data that we are going to be starting with

Select Location, date, total_cases, new_cases, total_deaths, population
From Covid_Deaths
Where continent IS NOT NULL
order by 1,2;


-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country

Select Location, date, total_cases,total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM Covid_Deaths
WHERE location like '%ghana%'
AND continent IS NOT NULL
ORDER BY 1,2;


-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

Select Location, date, Population, total_cases,  (total_cases/population)*100 as PercentPopulationInfected
From Covid_deaths
-- Where location like '%ghana%'
order by 1,2;


-- Countries with Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected
From Covid_deaths
-- Where location like  '%ghana%'
Group by Location, Population
order by PercentPopulationInfected;


-- Countries with Highest Death Count per Population

Select Location, MAX(Total_deaths ) as TotalDeathCount
From Covid_Deaths
-- Where location like  '%ghana%'
Where continent is not null 
Group by Location
order by TotalDeathCount DESC;



-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(Total_deaths) as TotalDeathCount
From Covid_Deaths
-- Where location like  '%ghana%'
Where continent is not null 
Group by continent
order by TotalDeathCount desc;



-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as SIGNED)) as total_deaths, SUM(cast(new_deaths as SIGNED))/SUM(New_Cases)*100 as DeathPercentage
From Covid_Deaths
-- Where location like  '%ghana%'
where continent is not null 
-- Group By date
;

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

USE portfolioproject;

SELECT dea.continent, dea.location, dea.date, dea.population,vac.new_vaccinations, SUM(vac.new_vaccinations) 
FROM covid_deaths dea
JOIN covidVaccinations vac
ON dea.location = vac.location
AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
order by 1,2
;



USE PORTFOLIOPROJECT;






















-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
Join CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
order by 2,3


-- Using CTE to perform Calculation on Partition By in previous query

With PopvsVac (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
Join CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
--order by 2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac;



-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
JoinCovid_Vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated




-- Creating View to store data for later visualizations

Create View PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
-- , (RollingPeopleVaccinated/population)*100
From Covid_Deaths dea
Join CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 




